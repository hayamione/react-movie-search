{"version":3,"sources":["Plotpopup.jsx","img/not-found.png","App.js","reportWebVitals.js","index.js"],"names":["Plotpopup","show","onHide","plot","Modal","centered","className","Header","closeButton","Title","Body","App","useState","movieinfo","setMovieinfo","title","setTitle","plotpopup","setPlotpopup","getmoviedata","url","fetch","then","response","json","movie","console","log","catch","err","useEffect","type","placeholder","onChange","event","value","target","Button","onClick","undefined","Error","class","src","Poster","alt","Genre","Plot","slice","Actors","Director","Writer","BoxOffice","Released","Runtime","Language","Country","Awards","Production","Ratings","map","rating","index","Source","Value","notfound","window","location","reload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99996825.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nconst Plotpopup = ({ show, onHide, plot }) => {\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={onHide}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className=\"modal show plot-popup\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Plot</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>{plot}</p>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Plotpopup;\r\n","export default __webpack_public_path__ + \"static/media/not-found.21eec054.png\";","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Button } from \"react-bootstrap\";\nimport Plotpopup from \"./Plotpopup\";\nimport notfound from \"./img/not-found.png\";\n\nfunction App() {\n  let [movieinfo, setMovieinfo] = useState(null);\n  let [title, setTitle] = useState(\"harry potter\");\n  let [plotpopup, setPlotpopup] = useState(false);\n\n  useEffect(() => {\n    getmoviedata();\n  }, []);\n\n  function readTitle(value) {\n    setTitle(value);\n    // console.log(value);\n  }\n\n  function getmoviedata() {\n    let url = `https://omdbapi.com/?t=${title}&plot=full&apikey=4926feba`;\n\n    fetch(url)\n      .then((response) => response.json())\n      .then((movie) => {\n        setMovieinfo(movie);\n        console.log(movie);\n        console.log(\"this is title: \", title);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  return (\n    <>\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"padd\">\n            <h1>Movie Search App With React JS Using OMDB Api</h1>\n            <div className=\"search\">\n              <input\n                type=\"text\"\n                placeholder=\"Enter Movie Name\"\n                onChange={(event) => {\n                  readTitle(event.target.value);\n                }}\n                className=\"inp\"\n              />\n              <Button type=\"button\" onClick={getmoviedata} className=\"btn\">\n                Search\n              </Button>\n            </div>\n\n            {movieinfo?.Error === undefined ? (\n              <div class=\"movie\">\n                <div class=\"poster\">\n                  <img src={movieinfo?.Poster} alt=\"Poster\" className=\"img\" />\n                </div>\n                <div class=\"details\">\n                  <div className=\"\">\n                    <h2>{movieinfo?.Title}</h2>\n                    <p>\n                      <strong>Genre :</strong> {movieinfo?.Genre}\n                    </p>\n                    <p>\n                      <strong>Plot :</strong> {movieinfo?.Plot.slice(0, 260)}{\" \"}\n                      <span className=\"more\" onClick={() => setPlotpopup(true)}>\n                        more...\n                      </span>\n                    </p>\n                    <p>\n                      <strong>Actors :</strong> {movieinfo?.Actors}\n                    </p>\n                    <p>\n                      <strong>Director :</strong> {movieinfo?.Director}\n                    </p>\n                    <p>\n                      <strong>Writer :</strong> {movieinfo?.Writer}\n                    </p>\n                    <p>\n                      <strong>Box Office :</strong> {movieinfo?.BoxOffice}\n                    </p>\n                    <p>\n                      <strong>Release Date :</strong> {movieinfo?.Released}\n                    </p>\n                    <p>\n                      <strong>Runtime :</strong> {movieinfo?.Runtime}\n                    </p>\n                    <p>\n                      <strong>Language :</strong> {movieinfo?.Language}\n                    </p>\n                    <p>\n                      <strong>Country :</strong> {movieinfo?.Country}\n                    </p>\n                    <p>\n                      <strong>Awards :</strong> {movieinfo?.Awards}\n                    </p>\n                    <p>\n                      <strong>Production :</strong> {movieinfo?.Production}\n                    </p>\n                    <p>\n                      <strong>Ratings</strong>\n                    </p>\n\n                    <div className=\"rating\">\n                      {movieinfo?.Ratings.map((rating, index) => (\n                        <div key={index}>\n                          <strong>{rating.Source}</strong>\n                          <p>{rating.Value}</p>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"not-found\">\n                <img src={notfound} alt=\"not-found\" />\n                Movie Not Found\n                <Button\n                  onClick={() => window.location.reload(true)}\n                  className=\"btn\"\n                >\n                  {\" \"}\n                  Try Again{\" \"}\n                </Button>\n              </div>\n            )}\n          </div>\n          <footer>\n            <strong>Developed and Designed By : </strong>Haya Zubair\n          </footer>\n        </div>\n        {/*<header className=\"App-header\">\n         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      </div>\n      <Plotpopup\n        show={plotpopup}\n        onHide={() => setPlotpopup(false)}\n        plot={movieinfo?.Plot}\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}