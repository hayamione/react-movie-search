{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","movieinfo","setMovieinfo","title","setTitle","getmoviedata","url","fetch","then","response","json","movie","console","log","catch","err","useEffect","className","type","placeholder","onChange","event","value","target","onClick","undefined","Error","class","src","Poster","alt","Title","Genre","Plot","Actors","Director","Writer","BoxOffice","Released","Runtime","Language","Country","Awards","Production","Ratings","map","rating","index","Source","Value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAkHeA,MA/Gf,WAGA,MAA6BC,mBAAS,MAAtC,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAAqBF,mBAAS,2CAA9B,mBAAKG,EAAL,KAAWC,EAAX,KAcA,SAASC,IACP,IAAIC,EAAG,iCAA6BH,EAA7B,8BAEPI,MAAMD,GACLE,MAAK,SAACC,GAAD,OAAYA,EAASC,UAC1BF,MAAK,SAACG,GACLT,EAAaS,GACbC,QAAQC,IAAIF,MAEfG,OAAM,SAACC,GACNH,QAAQC,IAAIE,MAIZ,OA1BFC,qBAAU,WAERX,MAEA,IAuBE,qBAAKY,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,OAAf,UACE,+EACA,sBAAKA,UAAU,SAAf,UACE,uBAAOC,KAAK,OAAOC,YAAY,mBAAmBC,SAAU,SAACC,GAzBzE,IAAmBC,IAyByED,EAAME,OAAOD,MAxBrGlB,EAASkB,IAwBqGL,UAAU,QAChH,wBAAQC,KAAK,SAASM,QAASnB,EAAcY,UAAU,MAAvD,4BAIiBQ,KAAV,OAATxB,QAAS,IAATA,OAAA,EAAAA,EAAWyB,OAEX,sBAAKC,MAAM,QAAX,UAEI,qBAAKA,MAAM,SAAX,SACE,qBAAKC,IAAG,OAAE3B,QAAF,IAAEA,OAAF,EAAEA,EAAW4B,OAAQC,IAAI,SAASb,UAAU,UAEtD,qBAAKU,MAAM,UAAX,SACE,sBAAKV,UAAU,OAAf,UACE,oCAAKhB,QAAL,IAAKA,OAAL,EAAKA,EAAW8B,QAChB,8BAAG,6CAAH,WAA6B9B,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAW+B,SACxC,8BAAG,4CAAH,WAA4B/B,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAWgC,QACvC,8BAAG,8CAAH,WAA8BhC,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAWiC,UACzC,8BAAG,gDAAH,WAAgCjC,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAWkC,YAC3C,8BAAG,8CAAH,WAA8BlC,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAWmC,UACzC,8BAAG,kDAAH,WAAkCnC,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAWoC,aAC7C,8BAAG,oDAAH,WAAoCpC,QAApC,IAAoCA,OAApC,EAAoCA,EAAWqC,YAC/C,8BAAG,+CAAH,WAA+BrC,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAWsC,WAC1C,8BAAG,gDAAH,WAAgCtC,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAWuC,YAC3C,8BAAG,+CAAH,WAA+BvC,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAWwC,WAC1C,8BAAG,8CAAH,WAA8BxC,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAWyC,UACzC,8BAAG,kDAAH,WAAkCzC,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAW0C,cAC7C,4BAAG,+CAEH,qBAAK1B,UAAU,SAAf,gBAEAhB,QAFA,IAEAA,OAFA,EAEAA,EAAW2C,QAAQC,KAAI,SAACC,EAAOC,GAAR,OAErB,gCACI,iCAASD,EAAOE,SAChB,4BAAIF,EAAOG,UAFLF,gBAelB,oDAKJ,mCAAQ,kEAAR,uBClFOG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5C,MAAK,YAAkD,IAA/C6C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.7ecf54de.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\nimport './App.css';\n\nfunction App() {\n\n  \nlet [movieinfo,setMovieinfo]=useState(null);\nlet [title,setTitle]=useState(\"harry potter and the chamber of secrets\");\n\nuseEffect(()=>{\n\n  getmoviedata();\n  \n},[])\n\n\nfunction readTitle(value) {\n    setTitle(value);\n    // console.log(value);\n}\n\nfunction getmoviedata() {\n  let url = `https://omdbapi.com/?t=${title}&plot=full&apikey=4926feba`;\n\n  fetch(url)\n  .then((response)=>response.json())\n  .then((movie)=>{\n    setMovieinfo(movie);\n    console.log(movie);\n})\n.catch((err)=>{\n  console.log(err);\n})\n}\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"padd\">\n          <h1>Movie Search App With React JS Using OMDB Api</h1>\n          <div className=\"search\">\n            <input type=\"text\" placeholder=\"Enter Movie Name\" onChange={(event)=>{readTitle(event.target.value)}} className=\"inp\"/>\n            <button type=\"button\" onClick={getmoviedata} className=\"btn\">Search</button>\n          </div>\n\n        {\n          movieinfo?.Error===undefined?(\n        \n          <div class=\"movie\">\n            \n              <div class=\"poster\">\n                <img src={movieinfo?.Poster} alt=\"Poster\" className=\"img\" />\n              </div>\n              <div class=\"details\">\n                <div className=\"padd\">\n                  <h2>{movieinfo?.Title}</h2>\n                  <p><strong>Genre :</strong> {movieinfo?.Genre}</p>\n                  <p><strong>Plot :</strong> {movieinfo?.Plot}</p>\n                  <p><strong>Actors :</strong> {movieinfo?.Actors}</p>\n                  <p><strong>Director :</strong> {movieinfo?.Director}</p>\n                  <p><strong>Writer :</strong> {movieinfo?.Writer}</p>\n                  <p><strong>Box Office :</strong> {movieinfo?.BoxOffice}</p>\n                  <p><strong>Release Date :</strong> {movieinfo?.Released}</p>\n                  <p><strong>Runtime :</strong> {movieinfo?.Runtime}</p>\n                  <p><strong>Language :</strong> {movieinfo?.Language}</p>\n                  <p><strong>Country :</strong> {movieinfo?.Country}</p>\n                  <p><strong>Awards :</strong> {movieinfo?.Awards}</p>\n                  <p><strong>Production :</strong> {movieinfo?.Production}</p>\n                  <p><strong>Ratings</strong></p>\n\n                  <div className=\"rating\">\n                    {   \n                  movieinfo?.Ratings.map((rating,index)=>(\n\n                    <div key={index}>\n                        <strong>{rating.Source}</strong>\n                        <p>{rating.Value}</p>\n                    </div>\n                  ))\n                    }\n                  </div>\n\n                </div>\n              </div>\n          </div>\n          \n          ):\n\n          (\n            <h1>Movie Not Found</h1>\n          )   \n\n      }\n        </div>\n        <footer><strong>Developed and Designed By : </strong>Haya Zubair</footer>\n      </div>\n      {/*<header className=\"App-header\">\n         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}